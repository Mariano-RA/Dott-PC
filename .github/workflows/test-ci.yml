name: Test CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  DOCKERHUB_NAMESPACE: marianora   # <--- tu namespace de Docker Hub

jobs:
  build_scan_push:
    name: Build, Scan & (Push en main) (${{ matrix.name }})
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: back
            image: dott-back                 # <--- nombre del repo en Docker Hub
            context: back
            dockerfile: back/Dockerfile
          - name: python-api
            image: dott-python               # <--- publica como marianora/dott-python
            context: python-api
            dockerfile: python-api/Dockerfile

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Derive tags & flags
        run: |
          echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV
          REPO="${{ env.DOCKERHUB_NAMESPACE }}/${{ matrix.image }}"
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            TAGS="${REPO}:pr-${{ github.event.pull_request.number }}-${GITHUB_SHA::7}"
            PUSH=false
            SCAN_REF="${TAGS}"
          else
            TAGS="${REPO}:edge
            ${REPO}:${GITHUB_SHA::7}"
            PUSH=true
            SCAN_REF="${REPO}:${GITHUB_SHA::7}"
          fi
          echo "IMAGE_REPO=${REPO}" >> $GITHUB_ENV
          printf "TAGS<<EOF\n%s\nEOF\n" "${TAGS}" >> $GITHUB_ENV
          echo "PUSH=${PUSH}" >> $GITHUB_ENV
          echo "SCAN_REF=${SCAN_REF}" >> $GITHUB_ENV
          echo "Using repo: ${REPO}"

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_REPO }}
          flavor: latest=false
          labels: |
            org.opencontainers.image.title=${{ matrix.image }}
            org.opencontainers.image.description=${{ matrix.name }} image
            org.opencontainers.image.url=https://hub.docker.com/r/${{ env.DOCKERHUB_NAMESPACE }}/${{ matrix.image }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Login to Docker Hub (only on main)
        if: env.PUSH == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}   # usuario de login
          password: ${{ secrets.DOCKERHUB_TOKEN }}      # access token RW

      - name: Build (export tar) for scan
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          platforms: linux/amd64
          push: false
          tags: ${{ env.TAGS }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ matrix.name }}
          cache-to: type=gha,scope=${{ matrix.name }},mode=max
          outputs: type=oci,dest=/tmp/${{ matrix.image || matrix.name }}.tar
          provenance: false
          sbom: false

      - name: Security scan (Trivy on tar)
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: image
          input: /tmp/${{ matrix.image || matrix.name }}.tar
          severity: CRITICAL
          ignore-unfixed: true
          vuln-type: 'os,library'
          format: 'table'
          exit-code: '1'

      - name: Build & Push (main)
        if: env.PUSH == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          platforms: linux/amd64
          push: true
          tags: ${{ env.TAGS }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ matrix.name }}
          cache-to: type=gha,scope=${{ matrix.name }},mode=max
          provenance: false
          sbom: false
