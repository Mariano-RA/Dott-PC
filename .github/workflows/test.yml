name: Build Docker image

on:
  push:
    branches: [ "main" ]
  pull_request:

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write   # necesario solo si vas a publicar a GHCR
    env:
      DOCKER_BUILDKIT: "1"   # fuerza BuildKit para soportar --chown en COPY
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (opcional si querés multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # ===== VARIANTE A: SOLO BUILD (sin push) =====
      - name: Build (no push)
        uses: docker/build-push-action@v6
        with:
          context: python-api/
          file: python-api/Dockerfile   # <-- o simplemente borralo y deja que use el default
          push: false
          tags: local/dott-python:ci
          cache-from: type=gha
          cache-to: type=gha,mode=max


      # ===== VARIANTE B: PUBLICAR EN GHCR =====
      # Descomenta estas 3 tareas si querés publicar
      # - name: Login to GHCR
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}
      #
      # - name: Extract image tag
      #   id: meta
      #   run: |
      #     REPO=${{ github.repository }}
      #     IMAGE=ghcr.io/${REPO,,}/dott-python
      #     echo "image=$IMAGE" >> $GITHUB_OUTPUT
      #
      # - name: Build & Push
      #   uses: docker/build-push-action@v6
      #   with:
      #     context: .
      #     file: ./Dockerfile
      #     push: true
      #     tags: |
      #       ${{ steps.meta.outputs.image }}:latest
      #       ${{ steps.meta.outputs.image }}:${{ github.sha }}
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max
