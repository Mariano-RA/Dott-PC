name: Publish python-api image

on:
  push:
    branches: ["main"]
    paths:
      - "python-api/**"
      - ".github/workflows/python-ci.yml"
  pull_request:
    branches: ["main"]
    paths:
      - "python-api/**"
      - ".github/workflows/python-ci.yml"
  workflow_dispatch:

env:
  # ‚ö†Ô∏è Cambi√° por tu namespace real en Docker Hub
  DOCKERHUB_NAMESPACE: marianora

jobs:
  build_and_push:
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: python-api
            image: python-api            # nombre de la imagen en Docker Hub
            context: python-api          # carpeta del build
            dockerfile: python-api/Dockerfile

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      - name: Derive tags
        id: vars
        run: |
          REPO="${{ env.DOCKERHUB_NAMESPACE }}/${{ matrix.image }}"
          echo "IMAGE_REPO=$REPO" >> $GITHUB_ENV
          echo "EDGE_TAG=${REPO}:edge" >> $GITHUB_ENV
          echo "SHA_TAG=${REPO}:${GITHUB_SHA::7}" >> $GITHUB_ENV
          if [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            echo "LATEST_TAG=${REPO}:latest" >> $GITHUB_ENV
          fi

      - name: Docker meta (labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_REPO }}
          flavor: latest=false
          labels: |
            org.opencontainers.image.title=${{ matrix.image }}
            org.opencontainers.image.description=${{ matrix.name }} image
            org.opencontainers.image.url=https://hub.docker.com/r/${{ env.DOCKERHUB_NAMESPACE }}/${{ matrix.image }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      # En PR: build sin push (no hace login)
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # (Best-effort) limpiar builders/estado previo
      - name: Prune buildx builders (best-effort)
        run: |
          docker buildx ls || true
          docker buildx prune -f || true

      # üîÅ Build & Push con reintentos y logs "plain"
      - name: Build & Push (retry x3)
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 25
          max_attempts: 3
          retry_on: error
          command: |
            set -euo pipefail
            echo "=== Attempt $(date) ==="
            docker buildx version || true
            docker info || true

            # Armar tags (edge + sha + latest si corresponde)
            TAG_ARGS=(--tag "${EDGE_TAG}" --tag "${SHA_TAG}")
            if [[ -n "${LATEST_TAG:-}" ]]; then
              TAG_ARGS+=(--tag "${LATEST_TAG}")
            fi

            BUILDKIT_PROGRESS=plain \
            docker buildx build \
              --builder default \
              --file "${{ matrix.dockerfile }}" \
              --platform linux/amd64 \
              --pull \
              $([[ "${{ github.event_name }}" != "pull_request" ]] && echo "--push" || echo "") \
              --provenance=false \
              --sbom=false \
              "${TAG_ARGS[@]}" \
              "${{ matrix.context }}"

      # üß™ Si falla: volcar logs detallados de buildkit
      - name: Dump buildkit logs (on failure)
        if: failure()
        run: |
          echo "== Containers =="
          docker ps -a || true
          echo "== Buildx ls =="
          docker buildx ls || true
          echo "== Guess buildkit container(s) =="
          BK=$(docker ps -a --format '{{.ID}} {{.Image}} {{.Names}}' | grep -Ei 'buildkit|buildx' || true)
          echo "$BK"
          for ID in $(echo "$BK" | awk '{print $1}'); do
            echo "---- logs for $ID ----"
            docker logs "$ID" || true
          done
