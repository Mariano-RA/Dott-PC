name: Build Publish Docker Python

on:
  push:
    branches: ["main"]
    paths:
      - "python-api/**"
      - ".github/workflows/python-ci.yml"
  workflow_dispatch:

permissions:
  contents: read

env:
  DOCKERHUB_NAMESPACE: marianora

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # -------- Resolver namespace --------
      - name: Resolver namespace
        id: ns
        env:
          IN_NS: ${{ github.event.inputs.dockerhub_namespace }}
          VAR_NS: ${{ vars.DOCKERHUB_NAMESPACE }}
          ENV_NS: ${{ env.DOCKERHUB_NAMESPACE }}
        run: |
          NS="${IN_NS:-${VAR_NS:-${ENV_NS}}}"
          echo "namespace=$NS" >> "$GITHUB_OUTPUT"
          if [ -z "$NS" ]; then
            echo "⚠️ No se detectó NAMESPACE; se construirá sin namespace (no se hará push)."
          else
            echo "Usando NAMESPACE=$NS"
          fi

      # -------- Derivar repos y tags --------
      - name: Derive image coordinates & tags
        id: vars
        env:
          IMG_NAME: dott-python
        run: |
          IMAGE="${IMG_NAME}"
          NS="${{ steps.ns.outputs.namespace }}"
          if [ -n "$NS" ]; then
            REPO="${NS}/${IMAGE}"
          else
            REPO="${IMAGE}"
          fi

          echo "IMAGE_REPO=$REPO" >> $GITHUB_ENV
          echo "SHA_TAG=${REPO}:${GITHUB_SHA::7}" >> $GITHUB_ENV
          echo "LATEST_TAG=${REPO}:latest" >> $GITHUB_ENV

      - name: Prepare tags
        id: prep
        run: |
          T="${{ env.SHA_TAG }},${{ env.LATEST_TAG }}"
          echo "tags=$T" >> "$GITHUB_OUTPUT"

      # -------- Login --------
      - name: Login to Docker Hub
        if: ${{ github.event_name != 'pull_request' && steps.ns.outputs.namespace != '' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # -------- Build & Push --------
      - name: Build & Push con Docker clásico (sin BuildKit)
        env:
          DOCKER_BUILDKIT: "0"
        run: |
          set -euo pipefail
          CONTEXT="python-api"
          DOCKERFILE="python-api/Dockerfile"

          [ -d "$CONTEXT" ] || { echo "❌ No existe contexto $CONTEXT"; exit 1; }
          [ -f "$DOCKERFILE" ] || { echo "❌ No existe Dockerfile $DOCKERFILE"; exit 1; }

          TAGS_FLAGS=""
          IFS=',' read -ra TAGLIST <<< "${{ steps.prep.outputs.tags }}"
          for t in "${TAGLIST[@]}"; do
            TAGS_FLAGS="$TAGS_FLAGS -t $t"
          done

          echo "Construyendo con: $TAGS_FLAGS"
          docker build $TAGS_FLAGS -f "$DOCKERFILE" "$CONTEXT"

          if [ "${{ github.event_name }}" != "pull_request" ] && [ -n "${{ steps.ns.outputs.namespace }}" ]; then
            for t in "${TAGLIST[@]}"; do
              echo "Pushing $t"
              docker push "$t"
            done
          else
            echo "Saltando push (PR o sin namespace)."
          fi
